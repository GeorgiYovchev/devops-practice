name: ci pipeline

on:
  push:
    branches:
      - github-actions

jobs:
  editorconfig:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: check if editorconfig exists
        if: ${{ hashFiles('.editorconfig') == '' }}
        run: exit 'editorconfig does not exist.'

      - name: Add checker
        uses: editorconfig-checker/action-editorconfig-checker@main

      - name: Run checker
        run: editorconfig-checker

  linters:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: 3.11

      - name: Install dependencies
        run: pip install black pylint

      - name: Run the linters
        uses: wearerequired/lint-action@v2
        with:
          black: true
          pylint: true

  markdown:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Run markdown linter
        uses: nosborn/github-action-markdown-cli@v3.3.0
        with:
          files: README.md

  tests:
    runs-on: ubuntu-latest
    needs: [editorconfig, linters, markdown]
    steps:
      - uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: 3.11

      - name: Install requirements
        working-directory: ./app
        run: python -m pip install -r ../requirements.txt

      - name: Unit Test
        working-directory: ./app
        run: python -m unittest app_test.py

  scan:
    name: gitleaks
    runs-on: ubuntu-latest
    needs: [tests, code-smells]
    steps:
      - uses: actions/checkout@v3
      - uses: gitleaks/gitleaks-action@v2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  code-smells:
    name: SonarCloud
    needs: [editorconfig, linters, markdown]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: sonarsource/sonarcloud-github-action@master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

  review-security-issues:
    name: Snyk
    runs-on: ubuntu-latest
    needs: [tests, code-smells]
    steps:
      - uses: actions/checkout@v4
      - uses: snyk/actions/python-3.10@master
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
        with:
          args: --severity-threshold=critical

  build-and-push:
    runs-on: ubuntu-latest
    needs: [review-security-issues, scan]

    steps:
      - name: Checkout the code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build and export to Docker
        uses: docker/build-push-action@v5
        id: build
        with:
          context: .
          file: ./Dockerfile
          load: true

      - name: Scan image
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: ${{ steps.build.outputs.imageid }}
          format: "table"
          exit-code: "1"
          ignore-unfixed: true
          vuln-type: "os,library"
          severity: "CRITICAL"

      - name: Login to DockerHub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASS }}

      - name: Push Docker image
        uses: docker/build-push-action@v5
        with:
          push: true
          tags: georgiyovchev/ci-practice:${{ github.sha }}
          platforms: linux/amd64, linux/arm64

